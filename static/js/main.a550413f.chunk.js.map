{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2PAuNeA,E,kDAlNb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACCC,MAAQ,CACXC,SAAS,GACTC,WAAW,CACTC,GAAG,KACHC,MAAM,GACNC,WAAU,GAEZC,SAAQ,GAEV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBAGjB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBACjB,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAClB,EAAKM,eAAiB,EAAKA,eAAeN,KAApB,gBAnBR,E,6CAsBlB,SAAUO,GACR,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAEtB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,I,gCAGT,WACEU,KAAKnB,e,wBAGP,WAAa,IAAD,OACVoB,QAAQC,IAAI,eAEZC,MAAM,wCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACR,EAAKC,SAAS,CACZjC,SAASgC,S,0BAKf,SAAaE,GACX,IAAMpB,EAAOoB,EAAEC,OAAOrB,KAChBsB,EAAQF,EAAEC,OAAOC,MACvBV,QAAQC,IAAI,QAASb,GACrBY,QAAQC,IAAI,SAAUS,GAEtBX,KAAKQ,SAAS,CACZhC,WAAW,2BACNwB,KAAK1B,MAAME,YADN,IAERE,MAAMiC,Q,0BAKZ,SAAaF,GAAG,IAAD,OACbA,EAAEG,iBACFX,QAAQC,IAAI,QAASF,KAAK1B,MAAME,YAEhC,IAAMqC,EAAYb,KAAKf,UAAU,aAE7B6B,EAAM,0CAEgB,IAAvBd,KAAK1B,MAAMM,UACZkC,EAAG,gDAA6Cd,KAAK1B,MAAME,WAAWC,GAAnE,KACHuB,KAAKQ,SAAS,CACZ5B,SAAQ,KAKZuB,MAAMW,EAAK,CACTC,OAAO,OACPC,QAAQ,CACN,eAAe,mBACf,cAAcH,GAEhBI,KAAKC,KAAKC,UAAUnB,KAAK1B,MAAME,cAC9B4B,MAAK,SAACC,GACL,EAAKxB,aACL,EAAK2B,SAAS,CACXhC,WAAW,CACZC,GAAG,KACHC,MAAM,GACNC,WAAU,QAGbyC,OAAM,SAASC,GAChBpB,QAAQC,IAAI,SAAUmB,Q,uBAI1B,SAAUC,GACRtB,KAAKQ,SAAS,CACZhC,WAAW8C,EACX1C,SAAQ,M,wBAKZ,SAAW0C,GAAM,IAAD,OACRT,EAAYb,KAAKf,UAAU,aAEjCkB,MAAM,yCAAD,OAA0CmB,EAAK7C,GAA/C,KAAsD,CACzDsC,OAAO,SACPC,QAAQ,CACN,eAAe,mBACf,cAAcH,KAEfT,MAAK,SAACC,GAEP,EAAKxB,kB,4BAKT,SAAeyC,GAAM,IAAD,OAElBA,EAAK3C,WAAa2C,EAAK3C,UACvB,IAAMkC,EAAYb,KAAKf,UAAU,aAC3B6B,EAAG,gDAA4CQ,EAAK7C,GAAjD,KAET0B,MAAMW,EAAK,CACPC,OAAO,OACPC,QAAQ,CACN,eAAe,mBACf,cAAcH,GAEhBI,KAAKC,KAAKC,UAAU,CAAC,UAAaG,EAAK3C,UAAW,MAAQ2C,EAAK5C,UAC9D0B,MAAK,WACN,EAAKvB,gBAGToB,QAAQC,IAAI,QAASoB,EAAK3C,a,oBAI5B,WACE,IAAM4C,EAAQvB,KAAK1B,MAAMC,SACnBiD,EAAOxB,KACb,OACI,qBAAKyB,UAAU,YAAf,SAEE,sBAAKhD,GAAG,iBAAR,UACI,qBAAMA,GAAG,eAAT,SACG,sBAAMiD,SAAU1B,KAAKhB,aAAeP,GAAG,OAAvC,SACG,sBAAKgD,UAAU,eAAf,UACI,qBAAKE,MAAO,CAACC,KAAM,GAAnB,SACI,uBAAOC,SAAU7B,KAAKjB,aAAc0C,UAAU,eAAehD,GAAG,QAAQkC,MAAOX,KAAK1B,MAAME,WAAWE,MAAOoD,KAAK,OAAOzC,KAAK,QAAQ0C,YAAY,iBAGpJ,qBAAKJ,MAAO,CAACC,KAAM,GAAnB,SACG,uBAAOnD,GAAG,SAASgD,UAAU,kBAAkBK,KAAK,SAASzC,KAAK,iBAOhF,qBAAMZ,GAAG,eAAT,SACO8C,EAAMS,KAAI,SAASV,EAAMW,GACxB,OACI,sBAAiBR,UAAU,4BAA3B,UAEE,qBAAKS,QAAS,kBAAMV,EAAKpC,eAAekC,IAAOK,MAAO,CAACC,KAAK,GAA5D,UAEwB,IAAnBN,EAAK3C,UACF,+BAAO2C,EAAK5C,QAIZ,iCAAS4C,EAAK5C,UAKtB,qBAAKiD,MAAO,CAACC,KAAK,GAAlB,SACI,wBAAQM,QAAS,kBAAMV,EAAKtC,UAAUoC,IAAOG,UAAU,8BAAvD,oBAGJ,qBAAKE,MAAO,CAACC,KAAK,GAAlB,SACI,wBAAQM,QAAS,kBAAMV,EAAKrC,WAAWmC,IAAOG,UAAU,qCAAxD,mBAnBIQ,iB,GAhLlBE,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BX,M","file":"static/js/main.a550413f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        todoList:[],\n        activeItem:{\n          id:null,\n          title:'',\n          completed:false,\n        },\n        editing:false,\n      }\n      this.fetchTasks = this.fetchTasks.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.getCookie = this.getCookie.bind(this)\n\n\n      this.startEdit = this.startEdit.bind(this)\n      this.deleteItem = this.deleteItem.bind(this)\n      this.strikeUnstrike = this.strikeUnstrike.bind(this)\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n  componentWillMount(){\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    console.log('Fetching...')\n\n    fetch('http://127.0.0.1:8000/api/task-list/')\n    .then(response => response.json())\n    .then(data =>\n      this.setState({\n        todoList:data\n      })\n      )\n  }\n\n  handleChange(e){\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log('Name:', name)\n    console.log('Value:', value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('ITEM:', this.state.activeItem)\n\n    const csrftoken = this.getCookie('csrftoken');\n\n    let url = 'http://127.0.0.1:8000/api/task-create/';\n\n    if(this.state.editing === true){\n      url = `http://127.0.0.1:8000/api/task-update/${ this.state.activeItem.id}/`\n      this.setState({\n        editing:false\n      })\n    }\n\n\n    fetch(url, {\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then((response)  => {\n        this.fetchTasks()\n        this.setState({\n           activeItem:{\n          id:null,\n          title:'',\n          completed:false,\n        }\n        })\n    }).catch(function(error){\n      console.log('ERROR:', error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem:task,\n      editing:true,\n    })\n  }\n\n\n  deleteItem(task){\n    const csrftoken = this.getCookie('csrftoken');\n\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method:'DELETE',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n    }).then((response) =>{\n\n      this.fetchTasks()\n    })\n  }\n\n\n  strikeUnstrike(task){\n\n    task.completed = !task.completed\n    const csrftoken = this.getCookie('csrftoken');\n    const url = `http://127.0.0.1:8000/api/task-update/${task.id}/`;\n\n    fetch(url, {\n        method:'POST',\n        headers:{\n          'Content-type':'application/json',\n          'X-CSRFToken':csrftoken,\n        },\n        body:JSON.stringify({'completed': task.completed, 'title':task.title})\n      }).then(() => {\n        this.fetchTasks()\n      })\n\n    console.log('TASK:', task.completed)\n  }\n\n\n  render(){\n    const tasks = this.state.todoList;\n    const self = this;\n    return(\n        <div className=\"container\">\n\n          <div id=\"task-container\">\n              <div  id=\"form-wrapper\">\n                 <form onSubmit={this.handleSubmit}  id=\"form\">\n                    <div className=\"flex-wrapper\">\n                        <div style={{flex: 6}}>\n                            <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\n                         </div>\n\n                         <div style={{flex: 1}}>\n                            <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                          </div>\n                      </div>\n                </form>\n\n              </div>\n\n              <div  id=\"list-wrapper\">\n                    {tasks.map(function(task, index){\n                      return(\n                          <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                            <div onClick={() => self.strikeUnstrike(task)} style={{flex:7}}>\n\n                                {task.completed === false ? (\n                                    <span>{task.title}</span>\n\n                                  ) : (\n\n                                    <strike>{task.title}</strike>\n                                  )}\n\n                            </div>\n\n                            <div style={{flex:1}}>\n                                <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                            </div>\n\n                            <div style={{flex:1}}>\n                                <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                            </div>\n\n                          </div>\n                        )\n                    })}\n              </div>\n          </div>\n\n        </div>\n      )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}